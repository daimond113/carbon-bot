{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.16.1",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@carbon-js/core!",
  "docComment": "",
  "name": "@carbon-js/core",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@carbon-js/core!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@carbon-js/core!ApplicationCommandData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ApplicationCommandData extends "
            },
            {
              "kind": "Reference",
              "text": "discord.ApplicationCommandData",
              "canonicalReference": "!\"\\\"discord.js\\\"\".ApplicationCommandData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ApplicationCommandData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@carbon-js/core!ApplicationCommandData#module:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "module: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "module",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@carbon-js/core!ApplicationCommandData#run:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "run: "
                },
                {
                  "kind": "Content",
                  "text": "(interaction: "
                },
                {
                  "kind": "Reference",
                  "text": "discord.CommandInteraction",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".CommandInteraction:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "run",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@carbon-js/core!CarbonError:class",
          "docComment": "/**\n * Represents a Carbon Error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CarbonError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CarbonError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@carbon-js/core!CarbonError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CarbonError` class\n *\n * @param code - The error type\n *\n * @param message - The error message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(code: "
                },
                {
                  "kind": "Reference",
                  "text": "CarbonErrorType",
                  "canonicalReference": "@carbon-js/core!CarbonErrorType:enum"
                },
                {
                  "kind": "Content",
                  "text": ", message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@carbon-js/core!CarbonError#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Reference",
                  "text": "CarbonErrorType",
                  "canonicalReference": "@carbon-js/core!CarbonErrorType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!CarbonError#embed:member(1)",
              "docComment": "/**\n * @returns A MessageEmbed representing this error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "embed(): "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorMessageEmbed",
                  "canonicalReference": "@carbon-js/core!ErrorMessageEmbed:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "embed"
            },
            {
              "kind": "Property",
              "canonicalReference": "@carbon-js/core!CarbonError#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@carbon-js/core!CarbonError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@carbon-js/core!CarbonErrorType:enum",
          "docComment": "/**\n * Carbon Error Types\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CarbonErrorType "
            }
          ],
          "releaseTag": "Public",
          "name": "CarbonErrorType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.CommandError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CommandError = "
                },
                {
                  "kind": "Content",
                  "text": "\"COMMAND_ERROR\""
                }
              ],
              "releaseTag": "Public",
              "name": "CommandError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.CommandNotFound:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CommandNotFound = "
                },
                {
                  "kind": "Content",
                  "text": "\"COMMAND_NOT_FOUND\""
                }
              ],
              "releaseTag": "Public",
              "name": "CommandNotFound",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.InvalidPermission:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidPermission = "
                },
                {
                  "kind": "Content",
                  "text": "\"INVALID_PERMISSION\""
                }
              ],
              "releaseTag": "Public",
              "name": "InvalidPermission",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.MissingInstance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MissingInstance = "
                },
                {
                  "kind": "Content",
                  "text": "\"MISSING_INSTANCE\""
                }
              ],
              "releaseTag": "Public",
              "name": "MissingInstance",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.MissingParam:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MissingParam = "
                },
                {
                  "kind": "Content",
                  "text": "\"MISSING_PARAMETER\""
                }
              ],
              "releaseTag": "Public",
              "name": "MissingParam",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@carbon-js/core!CarbonErrorType.ModuleNotEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ModuleNotEnabled = "
                },
                {
                  "kind": "Content",
                  "text": "\"MODULE_NOT_ENABLED\""
                }
              ],
              "releaseTag": "Public",
              "name": "ModuleNotEnabled",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@carbon-js/core!Client:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Client extends "
            },
            {
              "kind": "Reference",
              "text": "discord.Client",
              "canonicalReference": "!\"\\\"discord.js\\\"\".Client:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Client",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!Client._mock:member(1)",
              "docComment": "/**\n * Creates a mock client  @private\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static _mock(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "discord.ClientOptions",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".ClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Client",
                  "canonicalReference": "@carbon-js/core!Client:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ],
              "name": "_mock"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@carbon-js/core!Client:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Client` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "discord.ClientOptions",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".ClientOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!Client#cacheCommands:member(1)",
              "docComment": "/**\n * Allows you to cache your commands for Carbon's usage and not send a request to the Discord API.\n *\n * @param params - The cache options\n *\n * @param  - params.commands The commands to cache  @private Only used for caching commands, which can be done with registerCommands\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cacheCommands(params: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        commands: "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ],
              "name": "cacheCommands"
            },
            {
              "kind": "Property",
              "canonicalReference": "@carbon-js/core!Client#interactions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interactions: "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "interactions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!Client#registerCommands:member(1)",
              "docComment": "/**\n * The function that allows you to register commands\n *\n * @param params - The register commands options\n *\n * @param  - params.commands The array of Commands\n *\n * @param  - params.guildId If provided, will register commands in a guild with that id\n *\n * @param  - params.overwrite RECOMMENDED If set to true will overwrite all commands to set them to commands provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerCommands(params: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        commands: "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        guildId?: "
                },
                {
                  "kind": "Reference",
                  "text": "discord.Snowflake",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".Snowflake:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        overwrite?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ],
              "name": "registerCommands"
            },
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!Client#removeCommands:member(1)",
              "docComment": "/**\n * The function that allows you to remove commands\n *\n * @param params - The remove commands options\n *\n * @param  - params.names If provided, will only remove commands with the specified name\n *\n * @param  - params.guildId If provided, will delete commands from guild with the id provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeCommands(params?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        names?: string[];\n        guildId?: "
                },
                {
                  "kind": "Reference",
                  "text": "discord.Snowflake",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".Snowflake:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                }
              ],
              "name": "removeCommands"
            },
            {
              "kind": "Method",
              "canonicalReference": "@carbon-js/core!Client#uncacheCommand:member(1)",
              "docComment": "/**\n * Allows you to uncache commands from Carbon's usage.\n *\n * @param params - The uncacheCommand params\n *\n * @param  - params.command The command to uncache  @private Only used for uncaching deleted commands, which can be done with removeCommands\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uncacheCommand(params: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        commands: "
                },
                {
                  "kind": "Reference",
                  "text": "discord.ApplicationCommand",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".ApplicationCommand:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "discord.ApplicationCommand",
                  "canonicalReference": "!\"\\\"discord.js\\\"\".ApplicationCommand:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Command",
                  "canonicalReference": "@carbon-js/core!Command:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 10
                  }
                }
              ],
              "name": "uncacheCommand"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@carbon-js/core!Command:class",
          "docComment": "/**\n * Represents a Carbon Slash Command\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Command "
            }
          ],
          "releaseTag": "Public",
          "name": "Command",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@carbon-js/core!Command:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Command` class\n *\n * @param data - Raw Slash Command Data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandData",
                  "canonicalReference": "@carbon-js/core!ApplicationCommandData:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@carbon-js/core!Command:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Command extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandData",
              "canonicalReference": "@carbon-js/core!ApplicationCommandData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Command",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        }
      ]
    }
  ]
}
